services:
  # Redis 服务，用于缓存、会话管理等，提供键值存储功能
  videohub-redis:
    container_name: videohub-redis
    image: redis:bookworm
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
    env_file:
      - "./env/redis.env"
    networks:
      - videohub

  # MySQL 服务，提供关系型数据库，用于存储结构化数据
  videohub-mysql:
    container_name: videohub-mysql
    image: mysql:8.0
    env_file:
      - "./env/mysql.env"
    ports:
      - "3306:3306"
    networks:
      - videohub
    volumes:
      - ../config/sql:/docker-entrypoint-initdb.d
      - ./data/mysql:/var/lib/mysql

  otel-collector:
    container_name: videohub-otel-collector
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ../config/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
    networks:
      - videohub

  # etcd 服务，分布式键值存储系统，用于服务发现、配置管理
  videohub-etcd:
    container_name: videohub-etcd
    image: quay.io/coreos/etcd:v3.5.5
    restart: always
    ports:
      - 2379:2379
      - 2380:2380
    env_file:
      - "./env/etcd.env"
    volumes:
      - ./script:/script
      - ../config:/config
      - ./data/etcd:/etcd-data
    networks:
      - videohub
    entrypoint: [ "sh", "-c", "chmod +x /script/etcd-monitor.sh && /script/etcd-monitor.sh & exec etcd" ]

  # Kafka 服务，分布式流处理平台，用于构建实时数据管道和流应用
  kafka:
    container_name: videohub-kafka
    image: bitnami/kafka:latest
    restart: always
    user: root
    ports:
      - "9092:9092"
      - "9093:9093"
    env_file:
      - ./env/kafka.env
    volumes:
      - ./data/kafka:/bitnami/kafka
    networks:
      - videohub
      
  elasticsearch:
    image: elasticsearch:8.4.2
    container_name: videohub-elasticsearch
    env_file:
      - ./env/es.env
    healthcheck:
      test: [ "CMD-SHELL", "curl -sf http://elasticsearch:9200/_cluster/health || exit 1" ] # ⼼跳检测，成功之后不再执⾏后⾯的退出
      interval: 60s # ⼼跳检测间隔周期
      timeout: 10s
      retries: 3
      start_period: 60s # ⾸次检测延迟时间
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ../config/elasticsearch/config:/usr/share/elasticsearch/config
      - ./data/elasticsearch:/usr/share/elasticsearch/data
      - ../config/elasticsearch/plugins:/usr/share/elasticsearch/plugins
    ports:
      - "9200:9200"
    restart: always
    networks:
      - videohub
    mem_limit: 750m

  kibana:
    image: kibana:8.4.2
    container_name: videohub-kibana
    env_file:
      - ./env/kibana.env
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    volumes:
      - ../config/kibana:/usr/share/kibana/config
      - ./data/kibana:/usr/share/kibana/data
    networks:
      - videohub
    mem_limit: 350m

networks:
  videohub:
    driver: bridge
    name: videohub
